# [vim\-snippets\-neosnippet/cmake\.snip at master Â· gisphm/vim\-snippets\-neosnippet]( https://github.com/gisphm/vim-snippets-neosnippet/blob/master/neosnippets/cmake.snip )
snippet init
    cmake_minimum_required(version ${1:2.8.2})
    project(${2:ProjectName})

    find_package(${3:library})

    include_directories(${$3_INCLUDE_DIRS})

    add_subdirectory(${0:src})

    add_executable($2)

    target_link_libraries($2 ${$3_LIBRARIES})

snippet proj
    project(${0:Name})

snippet min
    cmake_minimum_required(version ${0:2.8.2})

snippet include
    include_directories(${${0:include_dir}})

snippet find
    find_package(${1:library} ${0:REQUIRED})

snippet glob
    file(glob ${1:srcs} *.${0:cpp})

snippet subdir
    add_subdirectory(${0:src})

snippet lib
    add_library(${1:lib} ${${0:srcs}})

snippet link
    target_link_libraries(${1:bin} ${0:somelib})

snippet bin
    add_executable(${1:bin})

snippet set
    set(${1:var} ${0:val})

snippet dep
    add_dependencies(${1:target}
        ${0:dep}
    )

snippet c_flags
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${0}")

snippet cpp_flags
alias cxx_flags
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${0}")

snippet Ext_url
    include(ExternalProject)
    ExternalProject_Add(${1:googletest}
      URL ${2:http://googletest.googlecode.com/files/gtest-1.7.0.zip}
      URL_HASH SHA1=${3:f85f6d2481e2c6c4a18539e391aa4ea8ab0394af}
      SOURCE_DIR "${4:${CMAKE_BINARY_DIR}/gtest-src}"
      BINARY_DIR "${0:${CMAKE_BINARY_DIR}/gtest-build}"
      CONFIGURE_COMMAND ""
      BUILD_COMMAND     ""
      INSTALL_COMMAND   ""
      TEST_COMMAND      ""
    )

snippet Ext_git
    include(ExternalProject)
    ExternalProject_Add(${1:googletest}
      GIT_REPOSITORY    ${2:https://github.com/google/googletest.git}
      GIT_TAG           ${3:master}
      SOURCE_DIR        "${4:${CMAKE_BINARY_DIR}/googletest-src}"
      BINARY_DIR        "${0:${CMAKE_BINARY_DIR}/googletest-build}"
      CONFIGURE_COMMAND ""
      BUILD_COMMAND     ""
      INSTALL_COMMAND   ""
      TEST_COMMAND      ""
    )

snippet props
    set_target_properties(${1:target}
        ${2:properties} ${3:compile_flags}
        ${0:"-O3 -Wall -pedantic"}
    )

snippet test
    add_test(${1:ATestName} ${0:testCommand --options})

snippet dump_var
    message(STATUS "*** dump start cmake variables ***")
    foreach(_variableName ${_variableNames})
      message(STATUS "${_variableName}=${${_variableName}}")
    endforeach()
    message(STATUS "*** dump end ***")

snippet message
alias echo
    message(${0})

snippet messages_list
alias echo_list echo_var
    message("\${${0:# list var name}}")

snippet foreach_list
abbr    don't use ${} as var name here
options head
  foreach(${1:item} IN LISTS ${2:items})
    ${0}
  endforeach()

snippet list_append_all
    foreach(${1:item} IN LISTS ${2:items})
      list(APPEND ${3:new_item} "${4:#prefix}\${$1}${0:#suffix}")
    endforeach()

snippet list_length
  list(LENGTH ${1:#list} ${2:#out-var})
snippet list_get
  list(GET ${1:#list} ${2:#element index} ${3:#[index...]} ${4:out-var})
snippet list_join
  list(JOIN ${1:#list} ${2:#glue} ${3:#out-var})
snippet list_sublist
  list(SUBLIST ${1:#list} ${2:#begin} ${3:#length} ${4:#out-var})
snippet list_find
  list(FIND ${1:#list} ${2:#value} ${3:#out-var})
snippet list_append
  list(APPEND ${1:#list} [${2:#element...]})
snippet list_filter
  list(FILTER ${1:#list} ${2:#INCLUDE or EXCLUDE} REGEX ${3:#regex})
snippet list_insert
  list(INSERT ${1:#list} ${2:#index} ${3:#[element...]})
snippet list_remove_ietm
  list(REMOVE_ITEM ${1:#list} ${2:#value...})
snippet list_at
  list(REMOVE_AT ${1:#list} ${2:#index...})
snippet list_duplicates
  list(REMOVE_DUPLICATES ${1:#list})
snippet list_transform
  list(TRANSFORM ${1:#list} ${2:#ACTION} ${3:#[...]})
snippet list_reverse
  list(REVERSE ${1:#list})
snippet list_sort
  list(SORT ${2:#list})

snippet get_filename
abbr File name without directory
  get_filename_component(${1:#var name} ${0:#path} NAME)
snippet get_directory
abbr Directory without file name
  get_filename_component(${1:#var name} ${0:#path} DIRECTORY)
snippet get_ext
abbr File name longest extension (.b.c from d/a.b.c)
  get_filename_component(${1:#var name} ${0:#path} EXT)
snippet get_filename_without_ext
abbr File name without directory or longest extension
  get_filename_component(${1:#var name} ${0:#path} NAME_WE)
snippet get_absolute_path
abbr Full path to file
  get_filename_component(${1:#var name} ${0:#path} ABSOLUTE)
snippet get_realpath
abbr Full path to existing file with symlinks resolved
  get_filename_component(${1:#var name} ${0:#path} REALPATH)
snippet get_
  get_filename_component(${1:#var name} ${0:#path} )
snippet get_
  get_filename_component(${1:#var name} ${0:#path} )
snippet get_
  get_filename_component(${1:#var name} ${0:#path} )

