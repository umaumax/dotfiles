snippet string_const
	"${0}".to_string()

snippet string_from
alias stringfrom
	String::from("${0}")

snippet derive_Debug
abbr println!("{:?} or {:#?}")
	#[derive(Debug)]${0}

snippet cfg_test
	#[cfg(test)]${0}

snippet super
	use super::*;${0}

# NOTE: below join wrapper always return ""
snippet module_fzf
alias fzf_module,use_fzf
	`join([], feedkeys("\<Plug>(fzf#rust_module_header)", ''))`${0}

snippet return_type
	 -> ${0}

snippet segmentation_fault
	unsafe {
	  *(0 as *mut u32) = 42;
	}${0}

snippet type_debug
alias what_is_this_type
abbr way to know type via build message
	let _ :() = ${0};
