#!/usr/bin/env bash

## pre-commit script to prevent merge markers from being committed.

##
## This simply searches the files that you are about to commit.
##

RED="\033[0;31m"
DEFAULT="\033[0m"

# NOTE: cached == staged
changed=$(git diff --cached --name-only)
[[ -z "$changed" ]] && exit 0

grep='grep'
cmdcheck() { type >/dev/null 2>&1 "$@"; }
cmdcheck 'ggrep' && grep='ggrep'

files=($(echo $changed | xargs -L 1 -IXXX find XXX -type f -size -1M -maxdepth 1))
exit_code=1
if [[ ${#files[@]} -ge 1 ]]; then
  # NOTE: add 'FORBIDDEN_COMMIT_MAGIC_KEYWORD' at last of line
  echo "${files[@]}" | xargs $grep -E 'FORBIDDEN_COMMIT_MAGIC_KEYWORD$' -C 1 -H -n --color=always
  exit_code=$?
fi

## If the egrep command has any hits - echo a warning and exit with non-zero status.
if [[ $exit_code == 0 ]]; then
  echo -e "${RED}WARNING: You have to get rid of 'FORBIDDEN_COMMIT_MAGIC_KEYWORD' in the above files, lines. Fix them before committing.${DEFAULT}"
  echo -e "${RED}If you want to skip pre-commit hook, use below command.${DEFAULT}"
  echo -e "${RED}git commit --no-verify${DEFAULT}"
  exit 1
fi
