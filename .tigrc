########################
# set
########################
# main view: show commit id (left side)
set main-view = line-number:true date:local=yes author:display=abbreviated id:yes commit-title:graph=yes,refs=yes
set blame-view = date:local=yes author:display=abbreviated id:yes,color line-number:yes,interval=1 text

set line-graphics = utf-8
set mouse = true

# NOTE: default
# set vertical-split = auto
# NOTE; |
# set vertical-split = yes
# NOTE: -
# set vertical-split = no

set split-view-height = 80%
set split-view-width = 90%

# [tigでmerge diffを表示する \- Qiita]( https://qiita.com/YasuOza/items/7be136f03867d20b8332 )
set diff-options = -m --first-parent
set diff-highlight = true

# NOTE: 以下を有効にすると`u`でstage-updateするときにviewが閉じてしまう可能性があるので，注意
# set refresh-mode = auto
# set refresh-mode = periodic
#   set refresh-interval = 1

########################
# color
########################
color cursor white 104 bold

########################
# bind
########################
bind generic <Ctrl-f> scroll-page-down
# WARN: tmux key map butting
bind generic <Ctrl-b> scroll-page-up
bind generic <Right> scroll-page-down
bind generic <Left> scroll-page-up

# line
# NOTE: 期待する行が得られない
bind generic L !>bash -c 'echo %(text)'
# dump info
bind generic I !>bash -c 'echo :file; echo %(file):%(lineno); echo :commit id; echo %(commit); echo :branch; echo %(branch); echo :stash id; echo %(stash); echo :text; echo %(text)'

bind generic T !>git notes edit %(commit)

# NOTE: ?: confirm
# NOTE: ["Press Enter to continue" after a commit message · Issue \#463 · jonas/tig]( https://github.com/jonas/tig/issues/463 )
# NOTE: >: prevent 'Press Enter to continue' for interactive command
bind generic A ?>git commit --amend --allow-empty
# NOTE: Force git amend
bind generic Z ?>git commit --amend --allow-empty --no-verify
# remove file for untracked file
# NOTE: @: prevent message 'Press Enter to continue'
bind status D ?@rm -f %(file)
# NOTE: default is !git commit
bind status C !>git commit
# NOTE: 'F'orce commit
bind status F !>git commit --no-verify
bind status i Enter

# stash
# NOTE: default: bind stash ! ?git stash drop %(stash)
bind stash ! ?>git stash drop %(stash)
bind stash D ?>git stash drop %(stash)
# NOTE: default stash has confirmation prompt
bind stash A ?>git stash apply %(stash)
# NOTE: Force apply
bind stash F ?>git-stash-apply-force %(stash)

bind generic R refresh

# NOTE: rebase
bind main B !git rebase -i %(commit)
bind log  B !git rebase -i %(commit)
bind diff B !git rebase -i %(commit)

# [Tig で Git を自由自在に操作するための \.tigrc 設定例 \- Qiita]( https://qiita.com/sfus/items/063797a1dd8fdc7d032f )
# 最上/最下部移動
# g をファイル先頭に移動に変更、 view-grep を再割当て
bind generic g      move-first-line
bind generic E      view-grep

# G でファイル末尾に移動 (default: :toggle commit-title-graph)
bind generic G      move-last-line
bind main    G      move-last-line

# Alt-g で :toggle commit-title-graph
bind main    <Esc>g :toggle commit-title-graph

# 段落移動
# n / p を上下移動に割り当て (default: find-next / view-pager)
bind generic n      move-down
bind generic p      move-up

# n / p で単位ごとの移動
bind diff    n      :/^@@
bind diff    p      :?^@@
bind diff    <Esc>n :/^diff --(git|cc)
bind diff    <Esc>p :?^diff --(git|cc)
bind stage   n      :/^@@
bind stage   p      :?^@@
bind stage   N      :?^@@
bind stage   P      :/^@@
bind stage   <Esc>n :/^diff --(git|cc)
bind stage   <Esc>p :?^diff --(git|cc)
# NOTE: easy for switching status view
bind stage   C      view-close
bind stage   A      view-close
bind pager   n      :/^@@
bind pager   p      :?^@@
bind pager   <Esc>n :/^diff --(git|cc)
bind pager   <Esc>p :?^diff --(git|cc)
bind log     n      :/^commit
bind log     p      :?^commit
bind status  n      next
bind status  p      previous
bind status  N      previous
bind status  P      next

# NOTE: goto unstaged file
bind status  c      :5
bind status  s      :5


bind status  0 :2
bind status  1 :5
bind status  <Ctrl-a> :2
bind status  <Ctrl-e> move-last-line

# FYI: [Support "less" pager keyboard shortcuts · Issue \#138 · jonas/tig]( https://github.com/jonas/tig/issues/138 )
# bind generic <Shift-Space> move-up

# 元の n / p を別に割り当て
bind generic V        view-pager
bind generic <Ctrl-s> find-next # 要 stty stop undef
bind generic <Ctrl-r> find-prev

# NOTE: change split-view position
bind generic | :set vertical-split = yes
bind generic - :set vertical-split = no

bind generic <Delete> back
bind generic <Backspace> back

bind generic * search
bind generic n find-next

bind generic P parent

# NOTE: same keymapping to J,K
bind status <Ctrl-j> next
bind status <Ctrl-k> previous
bind stage  <Ctrl-j> next
bind stage  <Ctrl-k> previous

bind generic d !>git difftool --tool=vimdiff --no-prompt --trust-exit-code %(commit) -- %(file)
