function traverse_path_list() {
  local dirpath=$(perl -MCwd -e 'print Cwd::abs_path shift' ${1:-$PWD})
  while true; do
    echo $dirpath
    [[ "$dirpath" == "/" ]] && break
    local dirpath="$(dirname $dirpath)"
  done
}
for dir in `traverse_path_list $PWD/..`; do
  envrc_filepath="$dir/.envrc"
  [[ -f $envrc_filepath ]] && pushd $dir >/dev/null 2>&1 && source .envrc && popd >/dev/null 2>&1
done

# ----

BLACK="\033[0;30m" RED="\033[0;31m" GREEN="\033[0;32m" YELLOW="\033[0;33m" BLUE="\033[0;34m" PURPLE="\033[0;35m" LIGHT_BLUE="\033[0;36m" WHITE="\033[0;37m" GRAY="\033[0;39m" DEFAULT="\033[0m"
function echo() { command echo -e "$@"; }

function cpath_add() {
  local compile_commands_filepath="$1"
  export CPATH="$(cat $compile_commands_filepath | grep -o "\-I[^ ]*" | sort | uniq | sed 's/^-I//' | tr '\n' ':'):$CPATH"
}
if [[ -e build/compile_commands.json ]]; then
  cpath_add "build/compile_commands.json"
elif [[ -e .compile_commands.json ]]; then
  # for removable build/compile_commands.json
  cpath_add ".compile_commands.json"
else
# for no compile_commands.json
  echo "${RED}There is no compile_commands.json${DEFAULT}"
  echo "Please run below command."
  echo "${GREEN}catkin_make -DCMAKE_EXPORT_COMPILE_COMMANDS=ON${DEFAULT}"

export CPATH="$PWD/devel/include:$CPATH"
export CPATH="/opt/ros/kinetic/include:$CPATH"
fi

function path_remove() { export PATH=`echo -n $PATH | awk -v RS=: -v ORS=: '$0 != "'$1'"' | sed 's/:$//'`; }
# NOTE: to use system python
path_remove $HOME/.pyenv/shims
path_remove $HOME/.pyenv/bin
