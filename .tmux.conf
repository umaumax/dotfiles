# key
bind s split-window -v
bind v split-window -h
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R
bind -r < resize-pane -L 1
bind -r > resize-pane -R 1
bind -r - resize-pane -D 1
bind -r + resize-pane -U 1
# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind : command-prompt
bind C-i select-pane -t :.+
bind Escape copy-mode
setw -g mode-keys vi

# option
set -g display-time 6000
set -g status-interval 30
set -g history-limit 5000

# status line
set -g status-right "#(w | head -1 | cut -d, -f4) | %Y/%m/%d (%a) %p %I:%M"
setw -g window-status-format "#I:#W"
setw -g window-status-current-format "#I:#W_#P"
set -g status-bg black
set -g status-fg cyan
set -g status-left-fg black
set -g status-left-bg magenta
set -g status-right-fg black
set -g status-right-bg green
set-window-option -g window-status-current-attr bright,reverse
set-window-option -g window-status-current-bg cyan
set-window-option -g window-status-current-fg black
set-window-option -g xterm-keys on
set-option -g default-terminal "screen-256color"

# 設定ファイルのreload
bind r source-file ~/.tmux.conf \; display-message "Reload Config!!"

# マウス操作を有効にする
# [tmux v2.1からmouse関連の設定が変わった - Qiita](http://qiita.com/jyotti/items/70a3a8035d767f99f93d)
# v2.1 <= version
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# version < v2.1
#set -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on

# | でペインを縦分割する
bind | split-window -h
# - でペインを横分割する
bind - split-window -v

# ペインボーダーの色を設定する
set -g pane-border-fg green
set -g pane-border-bg black
# アクティブなペインを目立たせる
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# # Ubuntu setting
# # コピーモードを設定する
# ## viのキーバインドを使用する
# setw -g mode-keys vi
# ## クリップボード共有を有効にする
# # set-option -g default-command "reattach-to-user-namespace -l zsh"
# ## コピーモードの操作をvi風に設定する
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# unbind -T copy-mode-vi Enter
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# ----

# [dotfilesを作るときのOS別対応をする \- Panda Noir]( http://www.pandanoir.info/entry/2017/12/06/000000 )
# if-shell "type pbcopy >/dev/null 2>&1" "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'"
# if-shell "type xsel >/dev/null 2>&1" "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel -ip && xsel -op | xsel -ib'"
# if-shell "type xclip >/dev/null 2>&1" "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -i -sel clip > /dev/null'"

# [Mac \(ローカル\)とLinux \(リモート\)とtmuxでクリップボードを共有 \- Qiita](https://qiita.com/py0n/items/2d00e9f53aba63c54afa)
# # Linux with xsel
if "which xsel" "bind-key -T copy-mode-vi     v send-keys -X begin-selection"
if "which xsel" "bind-key -T copy-mode-vi     y send-keys -X copy-pipe-and-cancel 'xsel -bi'"
if "which xsel" "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xsel -bi'"
# # Mac
# Ctrl+b [ -> v -> v or y or Enter
# with mouse -> with opt key
# [tmux 2\.6とreattach\-user\-namespace]( https://blog.nijohando.jp/post/tmux-2.6-and-reattach-to-user-namespace/ )
if "which pbcopy" "bind-key -T copy-mode-vi     v send-keys -X begin-selection"
if "which pbcopy" "bind-key -T copy-mode-vi     y send-keys -X copy-pipe-and-cancel 'pbcopy'"
if "which pbcopy" "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy'"

# 
# # for vim like clipboard copy
# # [tmuxからクリップボードにコピーする \- Qiita](https://qiita.com/purutane/items/84fb8359c9638ed04d01)
# # for linux
# set-window-option -g mode-keys vi
# # bind-key -t vi-copy v begin-selection
# # bind-key -t vi-copy C-v rectangle-toggle
# # bind-key -t vi-copy y copy-pipe "xsel -bi"
# # bind-key -t vi-copy Enter copy-pipe "xsel -bi"
# bind-key ] run 'tmux set-buffer -- \"$(xsel -bo)\"; tmux paste-buffer'
# 
# # for mouse clipboard copy
# # [Copy selection to a clipboard in tmux \- Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/348913/copy-selection-to-a-clipboard-in-tmux)
# # for linux
# set-option -s set-clipboard off
# # bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "xsel -bi"
