# [tmux\(1\) \- Linux manual page]( http://man7.org/linux/man-pages/man1/tmux.1.html )

# set = set-option
# setw = set-window-option
# bind =  bind-key

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | perl -pe 's/[^\\d]*(\\d+\\.\\d+|\\d+)[^\\d]*/(0+$1)/ge;')"
# NOTE: for tmux version compatibility
# if-shell -b '[[ "$(echo "$TMUX_VERSION < 1.9" | bc)" -eq 1 ]]' \
# "xxx; \
# yyy"


# NOTE: key settings
# []: default key
# -r: like a vim submode
# -a: the new window is inserted at the next index up from the specified target-window, moving win‐ dows up if necessary, otherwise target-window is the new window location.
# NOTE: t: tab, n: next, p: prev
bind t new-window -a -c '#{pane_current_path}' # tab [c]
bind c-t new-window -a -c '#{pane_current_path}' # tab [c]
bind -n † new-window -a -c '#{pane_current_path}' # tab [c] # alt+t
bind -n M-t new-window -a -c '#{pane_current_path}' # tab [c] # alt+t
bind n next-window
bind c-n next-window
bind -n ˜ next-window # alt+n
bind -n M-n next-window # alt+n
bind p previous-window
bind c-p previous-window
bind -n π previous-window # alt+p
bind -n M-p previous-window # alt+p
# NOTE: s,v: from vim setting
# NOTE: - is for resize
bind = split-window -v -c '#{pane_current_path}'
bind -n – split-window -v -c '#{pane_current_path}' # alt+-
bind -n M-- split-window -v -c '#{pane_current_path}' # alt+-
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind c-s split-window -v -c '#{pane_current_path}'
bind c-v split-window -h -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'
bind -n M-\ split-window -h -c '#{pane_current_path}'
bind -n « split-window -h -c '#{pane_current_path}'
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R
bind c-j select-pane -D
bind c-k select-pane -U
bind c-h select-pane -L
bind c-l select-pane -R
# w -> select window
bind -r < resize-pane -L 1
bind -r > resize-pane -R 1
bind -r - resize-pane -D 1
bind -r + resize-pane -U 1
# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# find window
bind f choose-window

# select window by number
bind 0 select-window -t :0
bind 1 select-window -t :1
bind 2 select-window -t :2
bind 3 select-window -t :3
bind 4 select-window -t :4
bind 5 select-window -t :5
bind 6 select-window -t :6
bind 7 select-window -t :7
bind 8 select-window -t :8
bind 9 select-window -t :9

# NOTE: help
# [What is the command for inline help in tmux? \- Super User]( https://superuser.com/questions/737075/what-is-the-command-for-inline-help-in-tmux )
# <C-b>+? or :list-commands

# switch session
bind c choose-session
bind -r tab switch-client -n
bind -r S-tab switch-client -r

# move window tab
bind -r S-left swap-window -t -1
bind -r S-down last-window
bind -r S-up   choose-window
bind -r S-right swap-window -t +1

# bind b select-pane -t :.+
# bind C-b select-pane -t :.+
# bind B select-pane -t :.-

# bind -n M-left select-pane -L
# bind -n M-down select-pane -D
# bind -n M-up select-pane -U
# bind -n M-right select-pane -R

# NOTE: M: alt
bind -n M-left  previous-window
bind -n M-down  last-window
bind -n M-up    choose-window
bind -n M-right next-window

bind -n M-[ select-pane -L # NOTE: M-[
bind -n M-] select-pane -R # NOTE: M-]
bind -n “ select-pane -L # NOTE: M-[
bind -n ‘ select-pane -R # NOTE: M-]

bind -n ˙  select-pane -L # NOTE: alt+h
bind -n ∆ select-pane -D # NOTE: alt+j
bind -n ˚ select-pane -U # NOTE: alt+k
bind -n ¬ select-pane -R # NOTE: alt+l

bind -n M-h  select-pane -L # NOTE: alt+h
bind -n M-j select-pane -D # NOTE: alt+j
bind -n M-k select-pane -U # NOTE: alt+k
bind -n M-l select-pane -R # NOTE: alt+l

# bind v copy-mode
bind b copy-mode
bind C-b copy-mode
bind B copy-mode
bind Escape copy-mode
bind -n C-Up copy-mode
bind -n C-Down copy-mode

bind : command-prompt

# -g: global session
setw -g mode-keys vi

# # C-e*2でtmux内のプログラムにC-eを送る
# bind C-e send-prefix
# set -g prefix C-e
# unbind C-b

# option
# vim submodeのような機能のwait time[ms]
set -g  repeat-time     400
set -g  display-time    6000
set -g  status-interval 30
set -sg escape-time     0
# NOTE: this is scorll-buffer size
# FYI: [Unlimited history in tmux \- Unix & Linux Stack Exchange]( https://unix.stackexchange.com/questions/43414/unlimited-history-in-tmux )
# WARN: This will pre-allocate that many lines (and hence memory) for all windows, which is going to cripple your machine the more history is stored over time.
set -g  history-limit   10000

# status line
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g status-left-length 40
set -g status-right-length 80
set -g status-left "[#{window_index}]#{session_name} "
set -g status-right "M<#{pane_mode}> S[#{window_index}] W(#{window_index}/#{session_windows}) P{#{pane_index}/#{window_panes}} #(pwd | sed 's:^$HOME:~:')"
set -g status-style fg="cyan",bg="black"
set -g status-left-style fg="colour202",bg="colour16"
set -g status-right-style fg="colour201",bg="colour232"
setw -g window-status-format "#{window_index}:#{window_name}"
setw -g window-status-current-format "#{window_index}:#{window_name}{#{pane_index}/#{window_panes}}"
setw -g window-status-current-style "bright,reverse",fg="colour233",bg="yellow"
setw -g xterm-keys on

set -g pane-border-style fg="green",bg="black"
set -g pane-active-border-style fg="white",bg="yellow"

# 設定ファイルのreload
bind r source-file ~/.tmux.conf \; display-message "[log] reload config!"

# マウス操作を有効にする
# [tmux v2.1からmouse関連の設定が変わった - Qiita](http://qiita.com/jyotti/items/70a3a8035d767f99f93d)
# v2.1 <= version
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# version < v2.1
#set -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on

# rename window to current path
set -g automatic-rename on
set -g automatic-rename-format '#{b:pane_current_path}'

set -g set-titles on
set -g set-titles-string "#{session_name}"

# NOTE: default is ' -_@'
set -g word-separators ' []{}|#&*()+=:;<>,?'

# ----

# [dotfilesを作るときのOS別対応をする \- Panda Noir]( http://www.pandanoir.info/entry/2017/12/06/000000 )
# [Mac \(ローカル\)とLinux \(リモート\)とtmuxでクリップボードを共有 \- Qiita](https://qiita.com/py0n/items/2d00e9f53aba63c54afa)

# # Linux with xsel
if "which xsel" "bind-key -T copy-mode-vi     v send-keys -X begin-selection"
if "which xsel" "bind-key -T copy-mode-vi     y send-keys -X copy-pipe-and-cancel 'xsel -bi'"
if "which xsel" "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xsel -bi'"
# if "which xsel" "bind-key -T copy-mode-vi   C-v send-keys -X rectangle-toggle"
if "which xsel" "bind-key -T copy-mode-vi     y send-keys -X copy-pipe-and-cancel 'xsel -bi'"
if "which xsel" "bind-key -T copy-mode-vi     Y send-keys -X copy-line"
if "which xsel" "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xsel -bi'"
if "which xsel" "bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xsel -bi'"

# # Mac
# Ctrl+b [ -> v -> v or y or Enter
# with mouse -> with opt key
# [tmux 2\.6とreattach\-user\-namespace]( https://blog.nijohando.jp/post/tmux-2.6-and-reattach-to-user-namespace/ )
if "which pbcopy" "bind-key -T copy-mode-vi     v send-keys -X begin-selection"
if "which pbcopy" "bind-key -T copy-mode-vi     V send-keys -X select-line"
# if "which pbcopy" "bind-key -T copy-mode-vi   C-v send-keys -X rectangle-toggle"
if "which pbcopy" "bind-key -T copy-mode-vi     y send-keys -X copy-pipe-and-cancel 'pbcopy'"
if "which pbcopy" "bind-key -T copy-mode-vi     Y send-keys -X copy-line"
if "which pbcopy" "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy'"
if "which pbcopy" "bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'pbcopy'"

bind-key -T copy-mode-vi i send-keys -X select-word
# bind-key -T copy-mode-vi iw select-word

# Double Click Select & Copy (Word)
# FYI: [Can I use double click to select and copy in tmux? \- Stack Overflow]( https://stackoverflow.com/questions/31404140/can-i-use-double-click-to-select-and-copy-in-tmux )
# 下記の方法以外では，optionキーを押しながらマウスで選択するとtmuxではなく，terminalの本来の機能を参照する
# NOTE: sleep for visualization
# NOTE: this copy-mode is command for use select-word command
if "which xsel" "bind-key -n DoubleClick1Pane copy-mode \\; send-keys -X select-word \\; run-shell 'sleep 0.05' \\; send-keys -X copy-pipe-and-cancel 'xsel -bi'"
if "which pbcopy" "bind-key -n DoubleClick1Pane copy-mode \\; send-keys -X select-word \\; run-shell 'sleep 0.05' \\; send-keys -X copy-pipe-and-cancel 'pbcopy'"
# NOTE: copy-mode-vi is also enabled at scrolling
if "which xsel" "bind-key -T copy-mode-vi DoubleClick1Pane send-keys -X select-word \\; run-shell 'sleep 0.05' \\; send-keys -X copy-pipe-and-cancel 'xsel -bi'"
if "which pbcopy" "bind-key -T copy-mode-vi DoubleClick1Pane send-keys -X select-word \\; run-shell 'sleep 0.05' \\; send-keys -X copy-pipe-and-cancel 'pbcopy'"

bind C-o paste-buffer
